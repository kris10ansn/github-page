@import "../mixins.scss";

section {
    width: 100vw;

    div.title {
        width: 100%;
        background: indigo;
        margin: 10px 0;
        display: flex;
        padding: var(--title-size) var(--margin-sides);
        color: white;

        align-items: center;

        h1 {
            text-transform: uppercase;

            font-size: calc(var(--title-size) / 2);
        }

        img {
            height: 4em;
            transition: opacity 0.3s;

            &:hover {
                opacity: 0.75;
            }
        }

        span.spacer {
            font-size: 1.5em;
            font-weight: bold;
            display: block;
            transform: translateY(-8%);

            padding: 0 25px;
        }

        a {
            font-size: 1em;
            font-weight: lighter;
        }
    }

    div.projects {
        --card-margin-multiplier: 2;

        width: 100%;
        height: 100%;

        $card-margin: 18px;
        padding: 65px calc(var(--margin-sides) - #{$card-margin});

        display: flex;
        flex-wrap: wrap;

        div.card {
            /*
            Have to do it in this goofy way with variables because react-scripts build
            modyfies the calc function on the width if i just put the values inline.
            Also, putting x * (var(--project-cols) - 1) doesn't seem to work, so I
            moved it to a separate variable and poof, it worked.
            */

            --one-third: calc(100% / var(--project-cols));
            --project-cols-minus-one: calc(var(--project-cols) - 1);
            --calculated-margin-normal: calc(
                #{$card-margin} * var(--project-cols-minus-one)
            );

            --calculated-margin: calc(
                var(--calculated-margin-normal) * var(--card-margin-multiplier)
            );

            width: calc(var(--one-third) - var(--calculated-margin));

            padding: 50px 35px;

            margin: 20px $card-margin;

            border-radius: 1vh;
            border: 1px solid lightgray;

            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            position: relative;

            svg.pinned {
                height: 30px;
                width: 30px;
                position: absolute;
                top: 20px;
                right: 20px;
                transform: rotate(45deg);
                fill: black;
            }

            div.info {
                height: 90%;

                $m: 28px;

                img {
                    height: 100px;
                }

                h1 {
                    font-size: 1.3em;
                    margin-top: $m;
                }

                p {
                    margin: $m 0;
                    font-size: 0.9em;
                    line-height: 1.75em;
                }
            }

            div.buttons {
                display: flex;
                margin-top: 18px;

                button {
                    @include big-button(indigo);
                    font-size: 0.56em;
                    padding: 12px;

                    margin: 0 5px;

                    &:disabled {
                        text-decoration: line-through;
                        color: rgb(170, 170, 170);
                    }
                }
            }
        }
    }
}

@media only screen and (min-width: 2560px) {
    :root {
        --project-cols: 4;
    }
}

@media only screen and (min-width: 3800px) {
    :root {
        --project-cols: 5;
        --img-slide: 25%;
    }
}

@media only screen and (min-width: 5000px) {
    :root {
        --img-slide: 40%;
    }
}

@media only screen and (min-width: 5760px) {
    :root {
        --project-cols: 7;
    }
}

@media only screen and (max-width: 1500px) {
    :root {
        --project-cols: 2;
    }
}

@media only screen and (max-width: 900px) {
    :root {
        --project-cols: 1;
    }
}

@media only screen and (max-width: 700px) {
    @media only screen and (min-height: 750px) {
        header .remove-small {
            display: initial;
        }
    }
}
